Class {
	#name : #PyramidTabPanelBuilder,
	#superclass : #PyramidPanelBuilder,
	#instVars : [
		'presenter',
		'item'
	],
	#category : #'Pyramid-views'
}

{ #category : #accessing }
PyramidTabPanelBuilder >> item [

	^ item
]

{ #category : #'as yet unclassified' }
PyramidTabPanelBuilder >> makeTab: aPresenter label: aString icon: anIcon order: aNumber [

	item := PyramidTabItem new
		        presenter: aPresenter;
		        order: aNumber;
		        label: aString;
		        icon: anIcon;
		        yourself
]

{ #category : #accessing }
PyramidTabPanelBuilder >> notebook [

	^ SpNotebookPresenter new
]

{ #category : #accessing }
PyramidTabPanelBuilder >> presenterOf: aCollectionOfItems [

	| notebook |
	notebook := self notebook.
	notebook whenSelectedPageChangedDo: [ :new :old |
		new presenterProvider visibleIf: true.
		old ifNotNil: [ old presenterProvider visibleIf: false ] ].
	aCollectionOfItems sorted do: [ :each | each addOnNotebook: notebook.
		each presenter visibleIf: false ].
	^ notebook
]

{ #category : #initialization }
PyramidTabPanelBuilder >> reset [

	item := nil
]
